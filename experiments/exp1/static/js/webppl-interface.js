// Generated by CoffeeScript 1.12.6
var FUNCTIONS, callWebppl, startWebppl;

FUNCTIONS = "{\n  initialize() {\n    globalStore.PRinfo = makePRinfo(globalStore.weights);\n  },\n  getPRinfo(arg) {\n    var PRinfo = globalStore.PRinfo;\n    return PRinfo(arg)\n  }\n}";

startWebppl = function() {
  var callWebppl, callback, code, resolveResult, resolveWebppl, resultPromise, store, webpplPromise;
  resolveResult = void 0;
  resultPromise = new Promise(function(resolve) {
    return resolveResult = resolve;
  });
  resolveWebppl = void 0;
  webpplPromise = new Promise(function(resolve) {
    return resolveWebppl = resolve;
  });
  callWebppl = function(kind, arg) {
    return webpplPromise.then(function(runWebppl) {
      resultPromise = new Promise(function(resolve) {
        return resolveResult = resolve;
      });
      webpplPromise = new Promise(function(resolve) {
        return resolveWebppl = resolve;
      });
      runWebppl([kind, arg]);
      return resultPromise;
    });
  };
  store = {
    _return2js: function(result, callback) {
      resolveResult(result);
      return resolveWebppl(callback);
    },
    cost: -Math.abs(PARAMS.info_cost),
    weights: PARAMS.q_weights
  };
  code = "var loop = function(request) {\n  var _functions = " + FUNCTIONS + "\n  var funcName = request[0];\n  var arg = request[1];\n  var func = _functions[funcName];\n  loop(callAsync(globalStore._return2js, func(arg)))\n}\nloop(['initialize'])";
  callback = function(s, val) {
    return console.log('Terminated webppl session.');
  };
  webppl.run(code, callback, {
    initialStore: store
  });
  return callWebppl;
};

callWebppl = startWebppl();
